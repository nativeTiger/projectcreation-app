{"version":3,"sources":["components/auth/SignIn.js","redux/actions/authActions.js","redux/types/authTypes.js","components/auth/SignUp.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignInLinks.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/projects/CreateProject.js","redux/actions/projectActions.js","redux/types/projectTypes.js","components/projects/ProjectDetails.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/authReducers.js","redux/reducers/projectReducers.js","redux/reducers/rootReducers.js","config/fbConfig.js","redux/store.js","index.js"],"names":["connect","state","authErr","auth","firebase","dispatch","signIn","cred","credentials","getState","getFirebase","signInWithEmailAndPassword","email","password","then","type","catch","err","useState","setState","handleChange","e","target","id","value","prevState","uid","to","className","onSubmit","preventDefault","console","log","htmlFor","onChange","authError","signup","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","firstName","lastName","initials","Notifications","notifications","map","item","key","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorfirstName","authorlastName","createdAt","calendar","Projectlist","projects","compose","ordered","firestoreConnect","limit","orderBy","ProjectList","logOut","signOut","profile","onClick","SignOutLinks","links","createProject","authId","add","authorId","Date","payload","history","push","ownProps","match","params","data","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","authReducers","initialState","action","message","projectReducers","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad4ca409.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { logIn } from '../../redux/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nconst SignIn = ({ signIn, authErr, auth }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signIn(state);\r\n        console.log(authErr)\r\n    }\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={handleSubmit} className='white'>\r\n                <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n                <div className='input-field'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input type='email' id='email' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input type='password' id='password' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <button className='btn pink lighten-1 z-depth-0'>Log in</button>\r\n                </div>\r\n                <div className='center red-text'>\r\n                    {authErr.authError ? <p>{authErr.authError}</p> : null}\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        authErr: state.auth,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: cred => dispatch(logIn(cred))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignIn);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    LOGOUT_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_ERROR\r\n} from '../types/authTypes';\r\nexport const logIn = credentials => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: LOGIN_FAILED,\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch(\r\n                {\r\n                    type: SIGNUP_SUCCESS\r\n                }\r\n            );\r\n        }).catch((err) => {\r\n            dispatch(\r\n                {\r\n                    type: SIGNUP_ERROR,\r\n                    err\r\n                }\r\n            );\r\n        });\r\n    }\r\n}\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../redux/actions/authActions';\r\nconst SignUp = ({ auth, authError, signup }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n        lastName: '',\r\n        firstName: ''\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        signup(state);\r\n    }\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={handleSubmit} className='white'>\r\n                <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n                <div className='input-field'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input type='email' id='email' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input type='password' id='password' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor='lastName'>Last Name</label>\r\n                    <input type='text' id='lastName' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor='firstName'>First Name</label>\r\n                    <input type='text' id='firstName' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n                </div>\r\n                <div className=\"center red-text\">\r\n                    {authError ? <p>{authError}</p> : null}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup: (cred) => dispatch(signUp(cred))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport moment from 'moment';\r\nconst Notifications = ({ notifications }) => {\r\n    return (\r\n        <div className='section'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'>Notifications</span>\r\n                    <ul className='notifications'>\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className='pink-text'>{item.user} </span>\r\n                                    <span>{item.content} </span>\r\n                                    <div className='grey-text note-date'>\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className='card z-depth-0 project-summary'>\r\n            <span className='card-title'>{project.title}</span>\r\n            <p>Posted by {project.authorfirstName} {project.authorlastName}</p>\r\n            <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Projectlist = ({ projects }) => {\r\n    return (\r\n        <div className='project-list section'>\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Projectlist","import React from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nfunction Dashboard({ projects, auth, notifications }) {\r\n    //console.log(projects)\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n        <div className='dashboard container'>\r\n            <div className='row'>\r\n                <div className='col s12 m6'>\r\n                    <ProjectList projects={projects} />\r\n                </div>\r\n                <div className='col s12 m5 offset-m1'>\r\n                    <Notifications notifications={notifications} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', limit: 3, orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ]))(Dashboard);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../../redux/actions/authActions'\r\nconst SignInLinks = ({ logOut, profile }) => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><Link to='/create'>New Project</Link></li>\r\n            <li><a onClick={logOut}>Log Out</a></li>\r\n            <li><Link to='/' className='btn btn-floating pink lighten-1'>{profile.initials}</Link></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOut: () => dispatch(logOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><Link to='/signup'>SignUp</Link></li>\r\n            <li><Link to='/signin'>LogIn</Link></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignInLinks from './SignInLinks'\r\nimport SignOutLinks from './SignOutLinks';\r\nimport { connect } from 'react-redux';\r\nconst Navbar = ({ auth, profile }) => {\r\n    const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks />\r\n    return (\r\n        <nav className='nav-wrapper grey draken-7'>\r\n            <div className='container'>\r\n                <Link to='/' className='brand-logo left'>Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createProject } from '../../redux/actions/projectActions';\r\nconst CreateProject = ({ createProject, auth, history }) => {\r\n    const [state, setState] = useState({\r\n        title: '',\r\n        content: ''\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProject(state)\r\n        history.push('/')\r\n    }\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={handleSubmit} className='white'>\r\n                <h5 className='grey-text text-darken-3'>Create Project</h5>\r\n                <div className='input-field'>\r\n                    <label htmlFor='title'>Title</label>\r\n                    <input type='text' id='title' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor='content'>Content</label>\r\n                    <input type='text' id='content' className='materialize-textarea' onChange={handleChange} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../types/projectTypes';\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorfirstName: profile.firstName,\r\n            authorlastName: profile.lastName,\r\n            authorId: authId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: CREATE_PROJECT,\r\n                payload: project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: CREATE_PROJECT_ERROR,\r\n                err\r\n            });\r\n        })\r\n\r\n    }\r\n}","export const CREATE_PROJECT = 'CREATE_PROJECT';\r\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR';","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = ({ project, auth }) => {\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className='container section project-details'>\r\n                <div className='card z-depth-0'>\r\n                    <div className='card-content'>\r\n                        <span className='card-title'>{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className='card-action gret lighten-4 grey-text'>\r\n                        <div>Posted by {project.authorfirstName} {project.authorlastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='container center'>\r\n                <p>Loading Project....</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)\r\n    (ProjectDetails);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport CreateProject from './components/projects/CreateProject';\nimport ProjectDetails from './components/projects/ProjectDetails';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ],\r\n    authError: []\r\n}","import initialState from './initialState';\r\nimport { LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from '../types/authTypes';\r\nconst authReducers = (state = initialState.authError, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS:\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: []\r\n            }\r\n        case LOGIN_FAILED:\r\n            console.log('login failed');\r\n            return {\r\n                ...state,\r\n                authError: 'login unsuccessfull'\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            console.log('logged out')\r\n        case SIGNUP_SUCCESS:\r\n            console.log('signed up successfully')\r\n            return {\r\n                ...state,\r\n                authError: []\r\n            }\r\n        case SIGNUP_ERROR:\r\n            console.log('signedup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducers;","import initialState from './initialState';\r\nimport { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../types/projectTypes';\r\n\r\nconst projectReducers = (state = initialState.projects, action) => {\r\n    switch (action.type) {\r\n        case CREATE_PROJECT:\r\n            console.log('project crated', action.payload)\r\n            return state;\r\n        case CREATE_PROJECT_ERROR:\r\n            console.log('created project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducers;","import { combineReducers } from 'redux';\r\nimport authReducers from './authReducers';\r\nimport projectReducers from './projectReducers';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducers = combineReducers({\r\n    auth: authReducers,\r\n    project: projectReducers,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducers;","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBFkB9Csdv6YRi-u4VhHqVP4X_VhDHFfb8\",\r\n    authDomain: \"marioplan-bf30e.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-bf30e.firebaseio.com\",\r\n    projectId: \"marioplan-bf30e\",\r\n    storageBucket: \"marioplan-bf30e.appspot.com\",\r\n    messagingSenderId: \"714916729906\",\r\n    appId: \"1:714916729906:web:b30d14e71437495ff0982b\",\r\n    measurementId: \"G-JX1DYLZ1M1\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore()\r\n\r\nexport default firebase;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport rootReducers from './reducers/rootReducers';\r\nimport fbConfig from '../config/fbConfig';\r\nconst composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\nconst store = createStore(rootReducers,\r\n    composeEnhancers(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true })\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n    document.getElementById('root')\n  );\n  serviceWorker.register();\n\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}